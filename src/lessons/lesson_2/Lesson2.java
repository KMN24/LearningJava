package lessons.lesson_2;

// TODO Lesson-2:  Примитивные типы данных. Понятие «переменная». Системы счисления

public class Lesson2 {
    public static void main(String[] args) {

       byte b1 = 10;
       byte b2 = 20;
       byte b3 = (byte) 1000; // -24

        short s1 = 5;
        short s2 = -10;
        short s3 = 0;

        // int по умолчанию тип данных для целых чисел
        int i1 = 100;
        int i2 = 2000;

        long l1 = 100000;
        long l2 = 234290492342949234L; // на конце должна быть буква L чтобы сказать это точно long, даже если тип сделали long
        //long l3 = 232324234234; // вот здесь будет ошибка потому что по умолчанию будет int но число превышает границу
        // int и будет ошибка. нужно в конце добавить L


        // по умолчанию цифры с запятыми имеют тип данных - double

        //float f1 = 3.14; //Ошибка -  если мы хотим работать с типом данных float нужно в конце добавить F;
        float f2 = 3.14F;

        double d1 = 5.5; // так как double по умол-ю поэтому мы не пишем ничего в конце
        double d2 = 13123.3424234;

        char c1 = 'a';
        char c2 = 65; // будет содержат значение 23го в UniCode // здесь 10-ричная система счисления
        char c3 = 'A';
        char c4 = '7';
        //char c5 = 'ab'; // ОШИБКА . В одинарных ковычках нужно только 1 символ
        char c6 = ' ';
        char c7 = '\u0500'; // будет выводить 500 тый символ в Unicode // Здесь исп 16-ричная система счисления

        System.out.println(i1);
        System.out.println(l2); // не выводится буква в конце L
        System.out.println(c2); // A - заглавная А
        System.out.println(c7); // d

        boolean bool1 = true;
        boolean bool2 = false;
        //boolean bool3 = 1; // ОШИБКА

        int a1 = 60; // 10 -система счисления // Decimal
        System.out.println(a1 + " a1");
        int a2 = 0B111100; // Binary - двоичная система счис.
        int a3 = 0b111100; // Binary - нет разницы заглавная или прописная
        System.out.println(a2 + " a2"); // НО выйдет в 10ричной системе, чтобы вывести в нужной система нужно
        System.out.println(a3 + " a3");
        int a4 = 074; // из за 0 комп понимает что эта 8ричная система // НО выйдет в 10ричной системе
        System.out.println(a4 + " a4");
        int a5 = 0x3c; // Здесь 0x или 0X обоз-т что эта 16ричная система // НО выйдет в 10ричной системе
        int a6 = 0X3C; // Нет разницы
        System.out.println(a5 + " a5");

        // TODO Underscore ( _ ) нижное подчеркивание
        int a7 = 10000000; // 1 млн но узнать что это 1 млн уйдет аремя
        int a8 = 1_000_000; // Мы можем поделить млн на тысяные части
        //int a9 = 1_000_; // Будет ошибка если после и до Underscore не будет ничего;
        System.out.println(a8 + " a8");
        int a10 = 1______0__3; // 103
        float ff1 = 12.4__34F; // Underscore можем исп  в числах
        //float ff2 = 12._3F; // ОШИБКА . До и после точки нельзя вставить Underscore
        //float ff3 = 12._3F; // ОШИБКА

        int aa1 = 0x1_2; // Можно исп Underscore
        //int aa2 = 0_x12; // ОШИБКА нельзя до и после исп ниж.подч-е

        int aa3 = 07_4; // 8 ричная
        int aa4 = 0_74; // ИСКЛЮЧЕНИЕ. Символ _ можно исп. после 0, который указывает, что число 8-причном формате



    }
}
